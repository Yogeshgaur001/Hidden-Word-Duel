{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/asus/OneDrive/Desktop/hidden%20Word%20Duel/hwd%20frontend/hidden-word-duel-client/src/hooks/useWebSocket.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useGame } from '@/contexts/GameContext';\r\nimport { StartRoundPayload, TickStartPayload, RevealTilePayload, RoundEndPayload, MatchEndPayload, OpponentDisconnectedPayload } from '@/types';\r\n\r\n// Ensure this URL points to your NestJS backend WebSocket server\r\nconst SOCKET_SERVER_URL = process.env.NEXT_PUBLIC_SOCKET_SERVER_URL || 'http://localhost:3001'; // Use an env variable\r\n\r\nexport const useWebSocket = () => {\r\n  const { dispatch } = useGame();\r\n  const socketRef = useRef<Socket | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!SOCKET_SERVER_URL) {\r\n      console.error(\"Socket server URL is not defined!\");\r\n      dispatch({ type: 'SET_NOTIFICATION', payload: { type: 'error', message: 'Server configuration error.' }});\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: 'CONNECTING' });\r\n    const socket = io(SOCKET_SERVER_URL, {\r\n      // Add any necessary options, e.g., for authentication if you implement it\r\n    });\r\n    socketRef.current = socket;\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server:', socket.id);\r\n      dispatch({ type: 'CONNECTED_TO_LOBBY' });\r\n      // Client is ready, could emit a 'joinLobby' event if your backend requires it\r\n      // For this spec, it seems two players connecting automatically starts things.\r\n    });\r\n\r\n    socket.on('connect_error', (err) => {\r\n      console.error('Connection error:', err);\r\n      dispatch({ type: 'SET_NOTIFICATION', payload: { type: 'error', message: `Connection Error: ${err.message}` } });\r\n    });\r\n\r\n    socket.on('waitingForOpponent', () => {\r\n        dispatch({ type: 'WAITING_FOR_OPPONENT' });\r\n    });\r\n\r\n    socket.on('startRound', (data: StartRoundPayload) => {\r\n      console.log('startRound received:', data);\r\n      dispatch({ type: 'START_ROUND', payload: data });\r\n    });\r\n\r\n    socket.on('tickStart', (data: TickStartPayload) => {\r\n      console.log('tickStart received:', data);\r\n      dispatch({ type: 'TICK_START', payload: data });\r\n    });\r\n\r\n    socket.on('revealTile', (data: RevealTilePayload) => {\r\n      console.log('revealTile received:', data);\r\n      dispatch({ type: 'REVEAL_TILE', payload: data });\r\n    });\r\n\r\n    socket.on('roundEnd', (data: RoundEndPayload) => {\r\n      console.log('roundEnd received:', data);\r\n      dispatch({ type: 'ROUND_END', payload: data });\r\n    });\r\n\r\n    socket.on('matchEnd', (data: MatchEndPayload) => {\r\n      console.log('matchEnd received:', data);\r\n      dispatch({ type: 'MATCH_END', payload: data });\r\n    });\r\n\r\n    socket.on('opponentDisconnected', (data: OpponentDisconnectedPayload) => {\r\n        console.log('opponentDisconnected received:', data);\r\n        dispatch({ type: 'OPPONENT_DISCONNECTED', payload: data });\r\n    });\r\n\r\n    socket.on('error', (errorMsg: string) => {\r\n        console.error('Server error:', errorMsg);\r\n        dispatch({ type: 'SET_NOTIFICATION', payload: { type: 'error', message: errorMsg }});\r\n    });\r\n\r\n\r\n    socket.on('disconnect', (reason) => {\r\n      console.log('Disconnected from WebSocket server:', reason);\r\n      dispatch({ type: 'SET_NOTIFICATION', payload: { type: 'error', message: 'Disconnected from server.' } });\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      socketRef.current = null;\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const submitGuess = (roundId: string, guessText: string) => {\r\n    if (socketRef.current && roundId) {\r\n      socketRef.current.emit('submitGuess', { roundId, guessText });\r\n      dispatch({ type: 'SUBMIT_GUESS_ATTEMPT' }); // Optimistic UI update\r\n    }\r\n  };\r\n\r\n  // Add other emit functions as needed, e.g., joinLobby, leaveGame\r\n\r\n  return { submitGuess };\r\n};"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;;;;AAGA,iEAAiE;AACjE,MAAM,oBAAoB,QAAQ,GAAG,CAAC,6BAA6B,IAAI,yBAAyB,sBAAsB;AAE/G,MAAM,eAAe;IAC1B,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC3B,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAiB;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAwB;;QAIxB;QAEA,SAAS;YAAE,MAAM;QAAa;QAC9B,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAErC;QACA,UAAU,OAAO,GAAG;QAEpB,OAAO,EAAE,CAAC,WAAW;YACnB,QAAQ,GAAG,CAAC,kCAAkC,OAAO,EAAE;YACvD,SAAS;gBAAE,MAAM;YAAqB;QACtC,8EAA8E;QAC9E,8EAA8E;QAChF;QAEA,OAAO,EAAE,CAAC,iBAAiB,CAAC;YAC1B,QAAQ,KAAK,CAAC,qBAAqB;YACnC,SAAS;gBAAE,MAAM;gBAAoB,SAAS;oBAAE,MAAM;oBAAS,SAAS,CAAC,kBAAkB,EAAE,IAAI,OAAO,EAAE;gBAAC;YAAE;QAC/G;QAEA,OAAO,EAAE,CAAC,sBAAsB;YAC5B,SAAS;gBAAE,MAAM;YAAuB;QAC5C;QAEA,OAAO,EAAE,CAAC,cAAc,CAAC;YACvB,QAAQ,GAAG,CAAC,wBAAwB;YACpC,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;QAChD;QAEA,OAAO,EAAE,CAAC,aAAa,CAAC;YACtB,QAAQ,GAAG,CAAC,uBAAuB;YACnC,SAAS;gBAAE,MAAM;gBAAc,SAAS;YAAK;QAC/C;QAEA,OAAO,EAAE,CAAC,cAAc,CAAC;YACvB,QAAQ,GAAG,CAAC,wBAAwB;YACpC,SAAS;gBAAE,MAAM;gBAAe,SAAS;YAAK;QAChD;QAEA,OAAO,EAAE,CAAC,YAAY,CAAC;YACrB,QAAQ,GAAG,CAAC,sBAAsB;YAClC,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAAK;QAC9C;QAEA,OAAO,EAAE,CAAC,YAAY,CAAC;YACrB,QAAQ,GAAG,CAAC,sBAAsB;YAClC,SAAS;gBAAE,MAAM;gBAAa,SAAS;YAAK;QAC9C;QAEA,OAAO,EAAE,CAAC,wBAAwB,CAAC;YAC/B,QAAQ,GAAG,CAAC,kCAAkC;YAC9C,SAAS;gBAAE,MAAM;gBAAyB,SAAS;YAAK;QAC5D;QAEA,OAAO,EAAE,CAAC,SAAS,CAAC;YAChB,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,SAAS;gBAAE,MAAM;gBAAoB,SAAS;oBAAE,MAAM;oBAAS,SAAS;gBAAS;YAAC;QACtF;QAGA,OAAO,EAAE,CAAC,cAAc,CAAC;YACvB,QAAQ,GAAG,CAAC,uCAAuC;YACnD,SAAS;gBAAE,MAAM;gBAAoB,SAAS;oBAAE,MAAM;oBAAS,SAAS;gBAA4B;YAAE;QACxG;QAEA,OAAO;YACL,OAAO,UAAU;YACjB,UAAU,OAAO,GAAG;QACtB;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,cAAc,CAAC,SAAiB;QACpC,IAAI,UAAU,OAAO,IAAI,SAAS;YAChC,UAAU,OAAO,CAAC,IAAI,CAAC,eAAe;gBAAE;gBAAS;YAAU;YAC3D,SAAS;gBAAE,MAAM;YAAuB,IAAI,uBAAuB;QACrE;IACF;IAEA,iEAAiE;IAEjE,OAAO;QAAE;IAAY;AACvB","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/asus/OneDrive/Desktop/hidden%20Word%20Duel/hwd%20frontend/hidden-word-duel-client/src/components/ui/notificationBar.tsx"],"sourcesContent":["'use client';\r\nimport { useEffect } from 'react';\r\nimport { useGame } from '@/contexts/GameContext';\r\n\r\nexport default function NotificationBar() {\r\n  const { state, dispatch } = useGame();\r\n  const { notification } = state;\r\n\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        dispatch({ type: 'CLEAR_NOTIFICATION' });\r\n      }, 5000); // Auto-clear after 5 seconds\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification, dispatch]);\r\n\r\n  if (!notification) return null;\r\n\r\n  const baseClasses = \"fixed top-4 left-1/2 -translate-x-1/2 p-4 rounded-md shadow-lg text-white z-50 text-sm md:text-base\";\r\n  const typeClasses = {\r\n    info: 'bg-blue-600',\r\n    success: 'bg-green-600',\r\n    error: 'bg-red-600',\r\n  };\r\n\r\n  return (\r\n    <div className={`${baseClasses} ${typeClasses[notification.type]}`}>\r\n      {notification.message}\r\n      <button\r\n        onClick={() => dispatch({ type: 'CLEAR_NOTIFICATION' })}\r\n        className=\"ml-4 font-bold text-sm\"\r\n        aria-label=\"Close notification\"\r\n      >\r\n        âœ•\r\n      </button>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAClC,MAAM,EAAE,YAAY,EAAE,GAAG;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB,MAAM,QAAQ,WAAW;gBACvB,SAAS;oBAAE,MAAM;gBAAqB;YACxC,GAAG,OAAO,6BAA6B;YACvC,OAAO,IAAM,aAAa;QAC5B;IACF,GAAG;QAAC;QAAc;KAAS;IAE3B,IAAI,CAAC,cAAc,OAAO;IAE1B,MAAM,cAAc;IACpB,MAAM,cAAc;QAClB,MAAM;QACN,SAAS;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW,GAAG,YAAY,CAAC,EAAE,WAAW,CAAC,aAAa,IAAI,CAAC,EAAE;;YAC/D,aAAa,OAAO;0BACrB,8OAAC;gBACC,SAAS,IAAM,SAAS;wBAAE,MAAM;oBAAqB;gBACrD,WAAU;gBACV,cAAW;0BACZ;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/asus/OneDrive/Desktop/hidden%20Word%20Duel/hwd%20frontend/hidden-word-duel-client/src/app/page.tsx"],"sourcesContent":["'use client'; // Required for hooks\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useGame } from '@/contexts/GameContext';\nimport { useWebSocket } from '@/hooks/useWebSocket'; // Initialize WS connection here or in GamePage\nimport NotificationBar from '@/components/ui/notificationBar';\n\nexport default function HomePage() {\n  const { state } = useGame();\n  const router = useRouter();\n\n  // Initialize WebSocket connection when component mounts or when game status is appropriate\n  // The useWebSocket hook itself handles initialization on mount\n  // We just call it here to make sure it's active.\n  useWebSocket(); // This will trigger connection attempt\n\n  useEffect(() => {\n    // If a round starts, navigate to the game page\n    if (state.gameStatus === 'playing' || state.gameStatus === 'roundOver') {\n      router.push('/game');\n    }\n  }, [state.gameStatus, router]);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center text-center h-full\">\n      <NotificationBar />\n      {state.gameStatus === 'lobby' && (\n        <div className=\"space-y-4\">\n          <h2 className=\"text-2xl font-semibold\">Welcome to Hidden Word Duel!</h2>\n          <p className=\"text-lg\">Connecting to the server...</p>\n          <div className=\"animate-pulse\">\n            <div className=\"w-12 h-12 border-4 border-primary border-t-transparent rounded-full inline-block animate-spin\"></div>\n          </div>\n        </div>\n      )}\n      {state.gameStatus === 'waiting' && (\n        <div className=\"space-y-4\">\n          <h2 className=\"text-2xl font-semibold\">Waiting for an Opponent</h2>\n          <p className=\"text-lg\">Hang tight, we're finding someone for you to duel!</p>\n          <div className=\"animate-pulse\">\n            <div className=\"w-12 h-12 border-4 border-secondary border-t-transparent rounded-full inline-block animate-spin\"></div>\n          </div>\n        </div>\n      )}\n       {/* Could add a button to manually join if that's part of the flow */}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA,0NAAqD,+CAA+C;AACpG;AANA,cAAc,qBAAqB;;;;;;;AAQpB,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACxB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,2FAA2F;IAC3F,+DAA+D;IAC/D,iDAAiD;IACjD,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD,KAAK,uCAAuC;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,+CAA+C;QAC/C,IAAI,MAAM,UAAU,KAAK,aAAa,MAAM,UAAU,KAAK,aAAa;YACtE,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC,MAAM,UAAU;QAAE;KAAO;IAE7B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,2IAAA,CAAA,UAAe;;;;;YACf,MAAM,UAAU,KAAK,yBACpB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,8OAAC;wBAAE,WAAU;kCAAU;;;;;;kCACvB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;YAIpB,MAAM,UAAU,KAAK,2BACpB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,8OAAC;wBAAE,WAAU;kCAAU;;;;;;kCACvB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAO3B","debugId":null}}]
}